import { useState, useEffect } from "react";
import md from "markdown-it";
import Head from "next/head";
import { useSupabaseClient } from "@supabase/auth-helpers-react";
import Layout from "../../../layout";
import { useRouter } from "next/router";

export default function ArticlesUpdate({ id }) {
  const router = useRouter();
  const [message, setMessage] = useState(null);
  const [articles, setArticle] = useState(null);
  const supabase = useSupabaseClient();

  useEffect(() => {
    (async () => {
      let { data, error, status } = await supabase
        .from("articles")
        .select(`titre, contenu, auteur`)
        .eq("id", id)
        .single();
      setArticle(data);
    })();
  }, [id, supabase]);

  const onSubmit = async function (e) {
    e.preventDefault();
    const data = new FormData(e.target);
    const { error } = await supabase
      .from("articles")
      .update({
        titre: data.get("titre"),
        contenu: data.get("contenu"),
        auteur: data.get("auteur"),
      })
      .eq("id", id)
      .then(() => {
        window.location.href = "/sheets";
      });
    if (error) {
      setMessage("Desole, nous avons rencontre une erreur.");
    } else {
      setMessage(
        <div>
          <h2 className="text-center mt-3">Confirmation</h2>
          <p>Merci d avoir modifie votre article.</p>
        </div>
      );
    }
  };

  return (
    <Layout>
      <Head>
        <title>WebTech - Modifie un article</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 className="wt-title m-4 text-2xl font-bold text-left">
        Modification de l article:{" "}
        <span className="underline decoration-sky-500">
          {" "}
          {articles?.titre}{" "}
        </span>
      </h1>{" "}
      <form onSubmit={onSubmit}>
        <div class="w-full mb-4 border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-700 dark:border-gray-600">
          <div class="px-4 py-2 bg-white rounded-t-lg dark:bg-gray-800">
            <textarea
              id="contenu"
              name="contenu"
              rows="4"
              class="w-full px-0 text-sm text-gray-900 bg-white border-0 dark:bg-gray-800 focus:ring-0 dark:text-white dark:placeholder-gray-400"
              placeholder="Write an article..."
              value={articles?.contenu}
              onChange={(e) => setArticle(e.target.value)}
            ></textarea>
          </div>
          <div class="flex items-center justify-between px-3 py-2 border-t dark:border-gray-600">
            <div class="flex items-center space-x-2">
              <input
                type="text"
                name="titre"
                className="border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-700 dark:border-gray-600"
                placeholder="Titre"
                value={articles?.titre}
                onChange={(e) => setArticle(e.target.value)}
              ></input>
              <input
                type="text"
                name="auteur"
                className="border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-700 dark:border-gray-600"
                placeholder="Auteur"
                value={articles?.auteur}
                onChange={(e) => setArticle(e.target.value)}
              />
            </div>
            <button
              type="submit"
              class="inline-flex items-center py-2.5 px-4 text-xs font-medium text-center text-white bg-blue-700 rounded-lg focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-900 hover:bg-blue-800"
            >
              Post Article
            </button>
          </div>
        </div>
      </form>
      {message && (
        <div
          aria-label="Overlow below the drawer dialog"
          className="fixed inset-0 bg-black/80 flex items-center justify-center"
          onClick={() => setMessage(null)}
          role="dialog"
        >
          <div
            aria-label="Alert pane"
            className="max-h-[90vh] max-w-[95vw] overflow-auto p-4 prose bg-white"
          >
            {message}
          </div>
        </div>
      )}
      <br />
    </Layout>
  );
}

export async function getServerSideProps(context) {
  console.log(context.params);
  return {
    props: {
      id: context.params.id,
    },
  };
}
