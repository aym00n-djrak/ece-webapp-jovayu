import { useState, useEffect } from "react";
import md from "markdown-it";
import Head from "next/head";
import { useSupabaseClient } from "@supabase/auth-helpers-react";
import Layout from "../../../layout";
import UserContext from "../../../components/UserContext";
import { useContext } from "react";
import { useRouter } from "next/router";

export default function Contacts({ id }) {
  const router = useRouter();
  const { user } = useContext(UserContext);
  const [contact, setContact] = useState(null);
  const supabase = useSupabaseClient();

  useEffect(() => {
    (async () => {
      let { data, error, status } = await supabase
        .from("contacts")
        .select(`firstname, lastname, email, message, user_id`)
        .eq("id", id)
        .single();
      setContact(data);
    })();
  }, [id, supabase]);

  //fonction delete

  const deleteData = async () => {
    const { data, error } = await supabase

      .from("contacts")
      .delete()
      .eq("id", id)
      .single()
      .then(() => {
        window.location.href = "/messages";
      })
      .catch((error) => {
        console.log("error", error);
      });
  };

  const updateDate = async () => {
    router.push(`/admin/update/${id}`);
  };

  return (
    <>
      <Layout>
        <Head>
          <title>WebTech - Contact message</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/cyberpunk.png" />
        </Head>
        <h1 className="wt-title m-4 text-2xl font-bold text-left text-primary">
          Votre commentaire :
        </h1>{" "}
        {contact && (
          <div className="overflow-hidden divide-y divide-zinc-700 shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
            <div className="bg-slate-50">
              <dl className="grid grid-cols-[auto_1fr] px-3 py-4 [&_dt]:italic [&_dt]:text-zinc-700 [&_dt]:pr-3">
                <dt>Name</dt>
                <dd className="text-zinc-900">
                  {contact.lastname}, {contact.firstname}
                </dd>
                <dt>Email</dt>
                <dd className="text-zinc-900">{contact.email}</dd>
              </dl>
            </div>
            <div className="px-3 py-10 text-primary">
              <div
                dangerouslySetInnerHTML={{
                  __html: md().render(contact.message),
                }}
              />
            </div>
          </div>
        )}
        {contact && contact.user_id === user.id && (
          <>
            <div className="flex justify-center p-4">
              <button
                data-mdb-ripple="true"
                data-mdb-ripple-color="light"
                class="inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out p-4"
                onClick={deleteData}
              >
                Delete
              </button>
            </div>
            <div className="flex justify-center">
              <button
                data-mdb-ripple="true"
                data-mdb-ripple-color="light"
                class="inline-block px-6 py-2.5 bg-blue-600 text-white font-medium text-xs leading-tight uppercase rounded shadow-md hover:bg-blue-700 hover:shadow-lg focus:bg-blue-700 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg transition duration-150 ease-in-out"
                onClick={updateDate}
              >
                Update
              </button>
            </div>
          </>
        )}
      </Layout>
    </>
  );
}

export async function getServerSideProps(context) {
  console.log(context.params);
  return {
    props: {
      id: context.params.id,
    },
  };
}
